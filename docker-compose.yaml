version: '3.8'

services:
  springboot-rest:
    build:
      context: ./paperless_rest
      dockerfile: Dockerfile
    container_name: PaperlessREST
    ports:
      - "8081:8081"  # Map host port 8081 to container port 8081
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/document_management_system
      - SPRING_DATASOURCE_USERNAME=postgres     # TODO: change to not be hardcoded
      - SPRING_DATASOURCE_PASSWORD=postgres     # TODO: change to not be hardcoded
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    networks:
      - app-network

  springboot-services:
    build:
      context: ./paperless_services
      dockerfile: Dockerfile        # we will only look in /paperless_services for the dockerfile
    container_name: PaperlessServices
    ports:
      - "8082:8082"  # Map host port 8082 to container port 8082
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - TESSDATA_PREFIX=/app/tessdata
    depends_on:
      - rabbitmq
    networks:
      - app-network

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres   # TODO: change to not be hardcoded
      POSTGRES_PASSWORD: postgres   # TODO: change to not be hardcoded
      POSTGRES_DB: document_management_system
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - ./db/pgadmin-servers.json:/pgadmin4/servers.json
    ports:
      - "9091:80"
    networks:
      - app-network
    restart: unless-stopped

  react-app:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

  rabbitmq:
    image: rabbitmq:3.7-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # port for client connections
      - "9093:15672"  # port for management UI - host port is 9093 and container port is 15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # MinIO API
      - "9090:9090" # MinIO Console
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "admin_password"
    command: server /data --console-address ":9090"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"

networks:
  app-network:
    driver: bridge