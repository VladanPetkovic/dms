version: '3.8'

services:
  springboot-app:
    build:
      context: .
      dockerfile: src/main/java/Dockerfile
    container_name: springboot-container
    ports:
      - "8081:8080"  # Map host port 8081 to container port 8080
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/document_management_system
      - SPRING_DATASOURCE_USERNAME=postgres     # TODO: change to not be hardcoded
      - SPRING_DATASOURCE_PASSWORD=postgres     # TODO: change to not be hardcoded
    networks:
      - app-network

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres   # TODO: change to not be hardcoded
      POSTGRES_PASSWORD: postgres   # TODO: change to not be hardcoded
      POSTGRES_DB: document_management_system
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - ./db/pgadmin-servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    networks:
      - app-network
    restart: unless-stopped

  react-app:
    build:
      context: .
      dockerfile: src/main/frontend/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

networks:
  app-network:
    driver: bridge